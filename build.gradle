plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id("io.github.gradle-nexus.publish-plugin") version "2.0.0"
}

group 'io.github.avistotelecom'
archivesBaseName = 'jpa-search'
version 'jpa3'

if (project.hasProperty("projectVersion")) {
    project.version = project.projectVersion
}

repositories {
    mavenCentral()
}

jar {
    duplicatesStrategy = 'exclude'
    manifest {
        attributes(
                'Main-Class': 'com.avisto.jpasearch.JpaSearch'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
    api 'jakarta.inject:jakarta.inject-api:2.0.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    destinationDir = file("${buildDir}/docs/javadoc")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = 'JPA Search'
                description = 'JPA Search offers a solution that facilitates the search of database content in Java projects.'
                url = 'https://github.com/AvistoTelecom/jpa-search'

                licenses {
                    license {
                        name = 'GNU LESSER GENERAL PUBLIC LICENSE, version 3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }

                organization {
                    name = 'Avisto'
                    url = 'https://www.avisto.com/'
                }

                developers {
                    developer {
                        name = 'Gabriel Revelli'
                        email = 'gabriel.revelli@avisto.com'
                        organization = 'Avisto'
                    }
                    developer {
                        name = 'Martin Rech'
                        email = 'martin.rech@avisto.com'
                        organization = 'Avisto'
                    }
                    developer {
                        name = 'Contact'
                        email = 'community@avisto.com'
                        organization = 'Avisto'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/AVISTOTELECOM/jpa-search.git'
                    developerConnection = 'scm:git:ssh://github.com:AVISTOTELECOM/jpa-search.git'
                    url = 'https://github.com/AVISTOTELECOM/jpa-search'
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

            nexusUrl = uri(releaseRepo)
            snapshotRepositoryUrl = uri(snapshotRepo)
        }
    }
}
